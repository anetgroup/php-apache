#!/bin/bash
set -e

# Note: we don't just use "apache2ctl" here because it itself is just a shell-script wrapper around apache2 which provides extra functionality like "apache2ctl start" for launching apache2 in the background.
# (also, when run as "apache2ctl <apache args>", it does not use "exec", which leaves an undesirable resident shell process)

[ -z "${CI_PROJECT_DIR}" ] && echo "MISSING env \$CI_PROJECT_DIR" && exit 1;
[ -z "${PORTS}" ] && echo "MISSING env \$PORTS" && exit 1;
[ -z "${SERVER_NAME}" ] && echo "MISSING env \$SERVER_NAME" && exit 1;
#[ -n "${SERVER_ALIAS}" ] && echo "MISSING env \$SERVER_ALIAS" && exit 1;

IFS=',' read -r -a SERVER_NAME <<< "$SERVER_NAME"
IFS='*:' read -r -a PORT_LIST <<< "$PORTS"

function join_by { local IFS="$1"; shift; echo "$*"; }


for P in ${PORT_LIST[@]}; do
  echo "
    Listen $P
    " >> /etc/apache2/ports.conf
done

cat /etc/apache2/ports.conf

echo "
<Directory $CI_PROJECT_DIR>
  Options Indexes FollowSymLinks
  AllowOverride all
	Require all granted
</Directory>

    " >> /etc/apache2/apache2.conf

for SN in ${SERVER_NAME[@]}; do
    echo "

    <VirtualHost $PORTS>
      ServerName $SN
      ServerAlias *.$SN
      DocumentRoot $CI_PROJECT_DIR/www
    </VirtualHost>

    " > /etc/apache2/sites-enabled/$SN.conf

    echo "/etc/apache2/sites-enabled/$SN.conf"
    cat /etc/apache2/sites-enabled/$SN.conf
done

echo "
ServerName localhost
" >> /etc/apache2/apache2.conf

# cat /etc/apache2/sites-enabled/000-default.conf

: "${APACHE_CONFDIR:=/etc/apache2}"
: "${APACHE_ENVVARS:=$APACHE_CONFDIR/envvars}"
if test -f "$APACHE_ENVVARS"; then
	. "$APACHE_ENVVARS"
fi

# Apache gets grumpy about PID files pre-existing
: "${APACHE_PID_FILE:=${APACHE_RUN_DIR:=/var/run/apache2}/apache2.pid}"
rm -f "$APACHE_PID_FILE"

# exec apache2ctl configtest
exec apache2 -DFOREGROUND "$@"
